library(glue)
library(ggplot2)
library(scales)
#load data
load("final_data/blog_data.RData")
data("stop_words")
#customise stop words
custom_stop_words <-
c("https", "t.co", "openai", "ai", "artificialintelligence", "http", "gpt", "gpt4", "nannannannannew", "t", "chatgpt", "amp")
stop_words <-
stop_words %>%
bind_rows(data_frame(word = custom_stop_words))
tweets_df %>%
count(is_verified) %>%
ggplot(aes(x = "", y = n, fill = is_verified)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Count",
title = "Distribution of Verified and Unverified Users") +
scale_fill_manual(values = c("#999999", "#0072B2")) +
coord_polar(theta = "y") +
theme_void()
tweets_df %>%
dplyr::count(is_verified) %>%
ggplot(aes(x = "", y = n, fill = is_verified)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Count",
title = "Distribution of Verified and Unverified Users") +
scale_fill_manual(values = c("#999999", "#0072B2")) +
coord_polar(theta = "y") +
theme_void()
tweets_df %>%
dplyr::count(user_verified) %>%
ggplot(aes(x = "", y = n, fill = user_verified)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Count",
title = "Distribution of Verified and Unverified Users") +
scale_fill_manual(values = c("#999999", "#0072B2")) +
coord_polar(theta = "y") +
theme_void()
tweets_df %>%
dplyr::count(user_verified) %>%
ggplot(aes(x = "", y = n, fill = user_verified)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Count",
title = "Distribution of Verified and Unverified Users") +
scale_fill_brewer(palette = "Dark2") +
coord_polar(theta = "y") +
theme_void()
tweets_df %>%
dplyr::count(user_verified) %>%
drop_na() %>%
ggplot(aes(x = "", y = n, fill = user_verified)) +
geom_bar(stat = "identity") +
labs(x = "", y = "Count",
title = "Distribution of Verified and Unverified Users") +
scale_fill_brewer(palette = "Dark2") +
coord_polar(theta = "y") +
theme_void()
tweets_df %>%
dplyr::count(user_verified) %>%
drop_na() %>%
ggplot(aes(x = "", y = n, fill = user_verified)) +
geom_bar(stat = "identity") +
labs(x = "User verified", y = "Count",
title = "Distribution of Verified and Unverified Users") +
scale_fill_brewer(palette = "Dark2") +
coord_polar(theta = "y") +
theme_void()
tweets_df %>%
dplyr::count(user_verified) %>%
drop_na() %>%
ggplot(aes(x = "User verified", y = n, fill = user_verified)) +
geom_bar(stat = "identity") +
labs(x = "User verified", y = "Count",
title = "Distribution of Verified and Unverified Users") +
scale_fill_brewer(palette = "Dark2") +
coord_polar(theta = "y") +
theme_void()
install.packages("vtable")
# Set code chunk defaults
# Consider adding `message = FALSE` option
knitr::opts_chunk$set(echo = FALSE, warning = TRUE, message = FALSE)
# Set R environment options
options(knitr.kable.NA = '')
#load packages
library(tidyverse)
library(dplyr)
library(tidyr)
library(mclust)
library(ggrepel)
library(broom)
library(dygraphs)
library(xts)
library(lubridate)
library(plotly)
library(plyr)
library(stringr)
library(sf)
library(wordcloud2)
library(textdata)
library(tidytext)
library(glue)
library(ggplot2)
library(scales)
library(vtable)
#load data
load("final_data/blog_data.RData")
data("stop_words")
#customise stop words
custom_stop_words <-
c("https", "t.co", "openai", "ai", "artificialintelligence", "http", "gpt", "gpt4", "nannannannannew", "t", "chatgpt", "amp")
stop_words <-
stop_words %>%
bind_rows(data_frame(word = custom_stop_words))
user_df <-
tweets_df %>%
select(user_followers,
user_friends,
user_favourites)
user_df <-
tweets_df %>%
select(user_followers,
user_friends,
user_favourites)
st(user_df)
user_df <-
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites")
user_df <-
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
rename("user_followers" = "followers",
"user_friends" = "friends",
"user_favourites" = "favourites")
user_df <-
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("user_followers" = "followers",
"user_friends" = "friends",
"user_favourites" = "favourites")
user_df <-
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites")
st(user_df)
user_df <-
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites")
t1 <-
st(user_df)
t1
user_df <-
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites")
t1 <-
st(user_df)
summary(t1)
user_df <-
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites")
st(user_df)
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites") %>%
st() %>%
ggplot(aes(x = variable, y = value)) +
geom_bar(stat = "identity", fill = "#0072B2") +
labs(x = "", y = "Count",
title = "Distribution of Followers, Friends, and Favourites") +
theme_minimal()
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites") %>%
st() %>%
ggplot(aes(x = Variable, y = value)) +
geom_bar(stat = "identity", fill = "#0072B2") +
labs(x = "", y = "Count",
title = "Distribution of Followers, Friends, and Favourites") +
theme_minimal()
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites") %>%
st()
install.packages("skimr")
user_df <- tweets_df %>%
select(user_followers, user_friends, user_favourites) %>%
gather(variable, value)
st(user_df)
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites") %>%
st()
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites") %>%
st( summ = list('mean(x)',
'median(x)',
'min(x)',
'max(x)',
'sd(x^2)'))
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites") %>%
st( summ = list(c('mean(x)',
'median(x)',
'min(x)',
'max(x)',
'sd(x^2)')))
install.packages("patchwork")
# Set code chunk defaults
# Consider adding `message = FALSE` option
knitr::opts_chunk$set(echo = FALSE, warning = TRUE, message = FALSE)
# Set R environment options
options(knitr.kable.NA = '')
#load packages
library(tidyverse)
library(dplyr)
library(tidyr)
library(mclust)
library(ggrepel)
library(broom)
library(dygraphs)
library(xts)
library(lubridate)
library(plotly)
library(plyr)
library(stringr)
library(sf)
library(wordcloud2)
library(textdata)
library(tidytext)
library(glue)
library(ggplot2)
library(scales)
library(vtable)
library(patchwork)
#load data
load("final_data/blog_data.RData")
data("stop_words")
#customise stop words
custom_stop_words <-
c("https", "t.co", "openai", "ai", "artificialintelligence", "http", "gpt", "gpt4", "nannannannannew", "t", "chatgpt", "amp")
stop_words <-
stop_words %>%
bind_rows(data_frame(word = custom_stop_words))
plot1 <- tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites") %>%
st( summ = list(c('mean(x)',
'median(x)',
'min(x)',
'max(x)',
'sd(x^2)'))) +
ggtitle("Summary of Followers, Friends and Favourites")
plot1 <- tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites") %>%
st( summ = list(c('mean(x)',
'median(x)',
'min(x)',
'max(x)',
'sd(x^2)')))
plot2 <- tweets_df %>%
dplyr::count(user_verified) %>%
drop_na() %>%
ggplot(aes(x = "User verified", y = n, fill = user_verified)) +
geom_bar(stat = "identity") +
labs(x = "User verified", y = "Count",
title = "Distribution of Verified and Unverified Users") +
scale_fill_brewer(palette = "Dark2") +
coord_polar(theta = "y") +
theme_void() +
ggtitle("Distribution of Verified and Unverified Users")
# arrange plots side by side
plot1 + plot2 + plot_layout(ncol = 2)
plot1 <- tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites") %>%
st( summ = list(c('mean(x)',
'median(x)',
'min(x)',
'max(x)',
'sd(x^2)')))
plot2 <- tweets_df %>%
dplyr::count(user_verified) %>%
drop_na() %>%
ggplot(aes(x = "User verified", y = n, fill = user_verified)) +
geom_bar(stat = "identity") +
labs(x = "User verified", y = "Count",
title = "Distribution of Verified and Unverified Users") +
scale_fill_brewer(palette = "Dark2") +
coord_polar(theta = "y") +
theme_void()
# arrange plots side by side
plot1 + plot2 + plot_layout(ncol = 2)
# Set code chunk defaults
# Consider adding `message = FALSE` option
knitr::opts_chunk$set(echo = FALSE, warning = TRUE, message = FALSE)
# Set R environment options
options(knitr.kable.NA = '')
#load packages
library(tidyverse)
library(dplyr)
library(tidyr)
library(mclust)
library(ggrepel)
library(broom)
library(dygraphs)
library(xts)
library(lubridate)
library(plotly)
library(plyr)
library(stringr)
library(sf)
library(wordcloud2)
library(textdata)
library(tidytext)
library(glue)
library(ggplot2)
library(scales)
library(vtable)
library(patchwork)
#load data
load("final_data/blog_data.RData")
data("stop_words")
#customise stop words
custom_stop_words <-
c("https", "t.co", "openai", "ai", "artificialintelligence", "http", "gpt", "gpt4", "nannannannannew", "t", "chatgpt", "amp")
stop_words <-
stop_words %>%
bind_rows(data_frame(word = custom_stop_words))
plot1 <- tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites") %>%
st( summ = list(c('mean(x)',
'median(x)',
'min(x)',
'max(x)',
'sd(x^2)')))
plot2 <- tweets_df %>%
dplyr::count(user_verified) %>%
drop_na() %>%
ggplot(aes(x = "User verified", y = n, fill = user_verified)) +
geom_bar(stat = "identity") +
labs(x = "User verified", y = "Count",
title = "Distribution of Verified and Unverified Users") +
scale_fill_brewer(palette = "Dark2") +
coord_polar(theta = "y") +
theme_void()
# arrange plots side by side
plot1 + plot2 + plot_layout(ncol = 2)
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites") %>%
st( summ = list(c( 'min(x)',
'max(x)',
'mean(x)',
'median(x)',
'sd(x^2)'),
summ.names = list(
c('Min',
'Max',
'Mean',
'Median',
'SD of X^2')
)))
tweets_df %>%
select(user_followers,
user_friends,
user_favourites) %>%
dplyr::rename("followers" = "user_followers",
"friends" = "user_friends",
"favourites" = "user_favourites") %>%
st( summ = list(c( 'min(x)',
'max(x)',
'mean(x)',
'median(x)',
'sd(x^2)'),
summ.names = list(
c('Min',
'Max',
'Mean',
'Median',
'SD of X^2')
)))
bio_cloud
#wrangle words
bio_unigrams <-
tweets_df %>%
select(user_description) %>%
unnest_tokens(output = unigram,
input = user_description,
token = "words") %>%
anti_join(stop_words,
by = c("unigram" = "word")) %>%
select(unigram) %>%
count() %>%
filter(freq > 1000)
set.seed(1234)
bio_unigrams <-
bio_unigrams %>%
drop_na()
#creating a word cloud
bio_cloud <-
wordcloud2(data = bio_unigrams,
fontFamily = "Roboto",
fontWeight = "normal",
color  = "random-dark",
size = 0.45,
rotateRatio = 0.15,
maxRotation = 1.57,
minRotation = 1.57)
bio_cloud
#wrangle words
hashtag_unigrams <-
tweets_df %>%
select(hashtags) %>%
unnest_tokens(output = unigram,
input = hashtags,
token = "words") %>%
anti_join(stop_words,
by = c("unigram" = "word")) %>%
select(unigram) %>%
count() %>%
filter(freq > 100)
hashtag_unigrams <-
hashtag_unigrams %>%
drop_na()
set.seed(1234)
#creating a word cloud
hash_cloud <-
wordcloud2(data = hashtag_unigrams,
fontFamily = "Roboto",
fontWeight = "normal",
color  = "random-dark",
size = 0.45,
rotateRatio = 0.15,
maxRotation = 1.57,
minRotation = 1.57)
hash_cloud
